library(psych)
library(here)
drug_induced_training_data <- read.csv(here("DIA_trainingset_RDKit_descriptors.csv"))
library(tidyverse)
library(psych)
library(here)
drug_induced_training_data <- read.csv(here("DIA_trainingset_RDKit_descriptors.csv"))
library(tidyverse)
library(psych)
library(here)
drug_induced_training_data <- read.csv(here("DIA_trainingset_RDKit_descriptors.csv"))
library(tidyverse)
library(psych)
library(here)
drug_induced_training_data <- read.csv(here("DIA_trainingset_RDKit_descriptors.csv"))
library(tidyverse)
library(psych)
drug_induced_training_data <- read.csv("/Users/jasonavalos/Projects/school/ADS502/project/Applied-Data-Science/ADS502/drug_induced_autoimmunity_prediction/DIA_trainingset_RDKit_descriptors.csv")
library(tidyverse)
library(psych)
library(ggplot2)
drug_induced_training_data <- read.csv("/Users/jasonavalos/Projects/school/ADS502/project/Applied-Data-Science/ADS502/drug_induced_autoimmunity_prediction/DIA_trainingset_RDKit_descriptors.csv")
head(drug_induced_training_data)
ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(binwidth=1)
ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram()
ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(binwidth=sqrt(nrow(drug_induced_training_data)))
ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram()
ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
hist <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
hist
hist_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_histogram(bins = 30)
hist_2
hist <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
hist_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_histogram(bins = 30)
hist + hist_2
hist <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
hist
boxplot <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_boxplot()
boxplot
hist_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_histogram(bins = 30)
hist + hist_2
hist <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
hist
boxplot <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_boxplot()
boxplot
hist_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_histogram(bins = 30)
hist_2
hist <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
hist
boxplot <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_boxplot()
boxplot
hist_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_histogram(bins = 30)
hist_2
boxplot_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_boxplot()
boxplot_2
library(gridExtra)
hist <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
hist
boxplot <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_boxplot()
boxplot
grid.arrange(hist, boxplot, ncol = 2)
hist_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_histogram(bins = 30)
hist_2
boxplot_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_boxplot()
boxplot_2
library(gridExtra)
hist <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
boxplot <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_boxplot()
grid.arrange(hist, boxplot, ncol = 2)
hist_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_histogram(bins = 30)
hist_2
boxplot_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_boxplot()
boxplot_2
library(gridExtra)
hist <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
boxplot <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_boxplot()
grid.arrange(hist, boxplot, ncol = 2)
hist_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_histogram(bins = 30)
boxplot_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_boxplot()
grid.arrange(hist_2, boxplot_2, ncol = 2)
library(gridExtra)
hist <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
boxplot <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_boxplot()
grid.arrange(hist, boxplot, ncol = 2)
hist_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_histogram(bins = 30)
boxplot_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_boxplot()
grid.arrange(hist_2, boxplot_2, ncol = 2)
hist_2 <- ggplot(drug_induced_training_data, aes(x=EState_VSA10)) + geom_histogram(bins = 30)
boxplot_2 <- ggplot(drug_induced_training_data, aes(x=EState_VSA10)) + geom_boxplot()
grid.arrange(hist_2, boxplot_2, ncol = 2)
library(gridExtra)
hist <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
boxplot <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_boxplot()
grid.arrange(hist, boxplot, ncol = 2)
hist_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_histogram(bins = 30)
boxplot_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_boxplot()
grid.arrange(hist_2, boxplot_2, ncol = 2)
hist_3 <- ggplot(drug_induced_training_data, aes(x=EState_VSA10)) + geom_histogram(bins = 30)
boxplot_3 <- ggplot(drug_induced_training_data, aes(x=EState_VSA10)) + geom_boxplot()
grid.arrange(hist_3, boxplot_3, ncol = 2)
library(gridExtra)
hist <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
boxplot <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_boxplot()
grid.arrange(hist, boxplot, ncol = 2)
hist_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_histogram(bins = 30)
boxplot_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_boxplot()
grid.arrange(hist_2, boxplot_2, ncol = 2)
hist_3 <- ggplot(drug_induced_training_data, aes(x=EState_VSA10)) + geom_histogram(bins = 30)
boxplot_3 <- ggplot(drug_induced_training_data, aes(x=EState_VSA10)) + geom_boxplot()
grid.arrange(hist_3, boxplot_3, ncol = 2)
hist_4 <- ggplot(drug_induced_training_data, aes(x=Kappa3)) + geom_histogram(bins = 30)
boxplot_4 <- ggplot(drug_induced_training_data, aes(x=Kappa3)) + geom_boxplot()
grid.arrange(hist_4, boxplot_4, ncol = 2)
hist_5 <- ggplot(drug_induced_training_data, aes(x=PEOE_VSA14)) + geom_histogram(bins = 30)
boxplot_5 <- ggplot(drug_induced_training_data, aes(x=PEOE_VSA14)) + geom_boxplot()
grid.arrange(hist_5, boxplot_5, ncol = 2)
res <- cor(drug_induced_training_data)
numeric_cols <- sapply(drug_induced_training_data, is.numeric)
numeric_no_missing_cols <- mydata[numeric_cols] [numeric_no_missing]
numeric_cols <- sapply(drug_induced_training_data, is.numeric)
numeric_no_missing_cols <- mydata[numeric_cols] [numeric_no_missing]
numeric_cols <- sapply(drug_induced_training_data, is.numeric)
numeric_no_missing_cols <- drug_induced_training_data[numeric_cols] [numeric_no_missing]
numeric_cols <- sapply(drug_induced_training_data, is.numeric)
numeric_no_missing_cols <- drug_induced_training_data[numeric_cols]
head(drug_induced_training_data)
numeric_cols <- sapply(drug_induced_training_data, is.numeric)
numeric_no_missing_cols <- drug_induced_training_data[numeric_cols]
head(numeric_no_missing_cols)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
numeric_features
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
round(corr, 2)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
# Display the lower triangle
corrplot(corr, type="lower")
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
# Display the lower triangle
corrplot(corr, type="lower")
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
# Display the lower triangle
corrplot(corr, type="upper")
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
head(corr)
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
head(corr,5)
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
head(corr,2)
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
head(corr,1)
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
head(corr,1)
heatmap(corr)
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
head(corr,1)
# The mtcars dataset:
data <- as.matrix(numeric_features)
# Default Heatmap
heatmap(data)
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
head(corr,1)
# The mtcars dataset:
data <- as.matrix(numeric_features)
# Default Heatmap
heatmap(data, scale = "column")
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
head(corr,1)
# The mtcars dataset:
data <- as.matrix(numeric_features)
# Default Heatmap
heatmap(data,Colv = NA, Rowv = NA, scale = "column")
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
head(corr,1)
# The mtcars dataset:
data <- as.matrix(numeric_features)
# Default Heatmap
heatmap(data,Colv = NA, Rowv = NA, scale = "row")
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
head(corr,1)
# The mtcars dataset:
data <- as.matrix(numeric_features)
corrplot(data, type = "lower")
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
head(corr,1)
# The mtcars dataset:
data <- as.matrix(numeric_features)
corrplot(corr, type = "lower")
# Default Heatmap
#heatmap(data,Colv = NA, Rowv = NA, scale = "row")
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
corr <- cor(numeric_features)
head(corr,1)
# The mtcars dataset:
data <- as.matrix(numeric_features)
heatmap(data,Colv = NA, Rowv = NA, scale = "row")
library(car)
model_all <- lm(Label ~ ., data=drug_induced_training_data)  # with all the independent variables in the dataframe
summary(model_all)
model_all <- lm(Label ~ ., data=drug_induced_training_data)  # with all the independent variables in the dataframe
summary(model_all)
model_all <- lm(Label ~ ., data=numeric_features)  # with all the independent variables in the dataframe
summary(model_all)
model_all <- lm(Label ~ ., data=numeric_features)  # with all the independent variables in the dataframe
# summary(model_all)
vif(model_all)
model_all <- lm(Label ~ ., data=numeric_features)  # with all the independent variables in the dataframe
summary(model_all)
# vif(model_all)
model_all <- lm(Label ~ ., data=numeric_features)  # with all the independent variables in the dataframe
summary(model_all)
# vif(model_all)
model_all <- lm(Label ~ ., data=numeric_features)  # with all the independent variables in the dataframe
summary(model_all)
# vif(model_all)
model_all <- lm(Label ~ ., data=numeric_features)  # with all the independent variables in the dataframe
summary(model_all)
coefficients(model_all)
model_all <- lm(Label ~ ., data=numeric_features)  # with all the independent variables in the dataframe
summary(model_all)
coeff <- coefficients(model_all)
model_all <- lm(Label ~ ., data=numeric_features)  # with all the independent variables in the dataframe
summary(model_all)
coeff <- coefficients(model_all)
na_coeff_names <- names(coeff)[is.na(coeff)]
na_coeff_names
library(corrplot)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
data <- as.matrix(numeric_features)
heatmap(data,Colv = NA, Rowv = NA, scale = "row")
table(drug_induced_training_data$Label)
table(drug_induced_training_data$Label)
# Undersampling
filter(drug_induced_training_data, Label == 0)
table(drug_induced_training_data$Label)
# Random Undersampling
filtered_0 <- filter(drug_induced_training_data, Label == 0)
filtered_1 <- filter(drug_induced_training_data, Label == 1)
table(drug_induced_training_data$Label)
# Random Undersampling
filtered_0 <- filter(drug_induced_training_data, Label == 0)
filtered_1 <- filter(drug_induced_training_data, Label == 1
filtered_1)
table(drug_induced_training_data$Label)
# Random Undersampling
filtered_0 <- sample_n(filter(drug_induced_training_data, Label == 0), 118)
filtered_1 <- filter(drug_induced_training_data, Label == 1)
table(drug_induced_training_data$Label)
# Random Undersampling
balanced_0 <- sample_n(filter(drug_induced_training_data, Label == 0), 118)
filtered_1 <- filter(drug_induced_training_data, Label == 1)
balanced_drug_induced_training_data <- rbind(balanced_0, filtered_1)
table(balanced_drug_induced_training_data)
table(drug_induced_training_data$Label)
# Random Undersampling
balanced_0 <- sample_n(filter(drug_induced_training_data, Label == 0), 118)
filtered_1 <- filter(drug_induced_training_data, Label == 1)
balanced_drug_induced_training_data <- rbind(balanced_0, filtered_1)
table(balanced_drug_induced_training_data$Label)
head(balanced_drug_induced_training_data,2)
# Drop SMILES feature
select(balanced_drug_induced_training_data, -SMILES)
# For nominal response
bank_marketing_test[["education"]] <- as.factor(bank_marketing_test[["education"]])
# Drop SMILES feature
select(balanced_drug_induced_training_data, -SMILES)
# Drop SMILES feature
balanced_drug_induced_training_data <- select(balanced_drug_induced_training_data, -SMILES)
# Pre-balance class cardinality
table(drug_induced_training_data$Label)
# Random Undersampling
balanced_0 <- sample_n(filter(drug_induced_training_data, Label == 0), 118)
filtered_1 <- filter(drug_induced_training_data, Label == 1)
bal_drug_induced_training_data <- rbind(balanced_0, filtered_1)
# Post-balance class cardinality
table(balanced_drug_induced_training_data$Label)
# Drop SMILES feature
bal_drug_induced_training_data <- select(bal_drug_induced_training_data, -SMILES)
for (col_name in colnames(bal_drug_induced_training_data)){
# For binary responses
if (length(unique(bal_drug_induced_training_data[[col_name]])) == 2){
bal_drug_induced_training_data[[col_name]] <- as.factor(bal_drug_induced_training_data[[col_name]])
}
# For standarization of numeric responses
if (is.numeric(bal_drug_induced_training_data[[col_name]])){
bal_drug_induced_training_data[[col_name]] <- (bal_drug_induced_training_data[[col_name]] - min(bal_drug_induced_training_data[[col_name]])) /
(max(bal_drug_induced_training_data[[col_name]]) - min(bal_drug_induced_training_data[[col_name]]))
}
}
# Drop SMILES feature
bal_drug_induced_training_data <- select(bal_drug_induced_training_data, -SMILES)
# Pre-balance class cardinality
table(drug_induced_training_data$Label)
# Drop SMILES feature
bal_drug_induced_training_data <- select(bal_drug_induced_training_data, -SMILES)
library(tidyverse)
library(psych)
library(ggplot2)
library(gridExtra)
library(corrplot)
drug_induced_training_data <- read.csv("/Users/jasonavalos/Projects/school/ADS502/project/Applied-Data-Science/ADS502/drug_induced_autoimmunity_prediction/DIA_trainingset_RDKit_descriptors.csv")
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
data <- as.matrix(numeric_features)
heatmap(data,Colv = NA, Rowv = NA, scale = "row")
# Pre-balance class cardinality
table(drug_induced_training_data$Label)
# Random Undersampling
balanced_0 <- sample_n(filter(drug_induced_training_data, Label == 0), 118)
filtered_1 <- filter(drug_induced_training_data, Label == 1)
bal_drug_induced_training_data <- rbind(balanced_0, filtered_1)
# Post-balance class cardinality
table(bal_drug_induced_training_data$Label)
print("Pre-balance class cardinality")
table(drug_induced_training_data$Label)
# Random Undersampling
balanced_0 <- sample_n(filter(drug_induced_training_data, Label == 0), 118)
filtered_1 <- filter(drug_induced_training_data, Label == 1)
bal_drug_induced_training_data <- rbind(balanced_0, filtered_1)
print("Post-balance class cardinality")
table(bal_drug_induced_training_data$Label)
# Drop SMILES feature
bal_drug_induced_training_data <- select(bal_drug_induced_training_data, -SMILES)
for (col_name in colnames(bal_drug_induced_training_data)){
# For binary responses
if (length(unique(bal_drug_induced_training_data[[col_name]])) == 2){
bal_drug_induced_training_data[[col_name]] <- as.factor(bal_drug_induced_training_data[[col_name]])
}
# For standarization of numeric responses
if (is.numeric(bal_drug_induced_training_data[[col_name]])){
bal_drug_induced_training_data[[col_name]] <- (bal_drug_induced_training_data[[col_name]] - min(bal_drug_induced_training_data[[col_name]])) /
(max(bal_drug_induced_training_data[[col_name]]) - min(bal_drug_induced_training_data[[col_name]]))
}
}
# Drop SMILES feature
bal_drug_induced_training_data <- select(bal_drug_induced_training_data, -SMILES)
# Drop SMILES feature
bal_drug_induced_training_data <- bal_drug_induced_training_data[, colnames(bal_drug_induced_training_data) != "SMILES"]
for (col_name in colnames(bal_drug_induced_training_data)){
# For binary responses
if (length(unique(bal_drug_induced_training_data[[col_name]])) == 2){
bal_drug_induced_training_data[[col_name]] <- as.factor(bal_drug_induced_training_data[[col_name]])
}
# For standarization of numeric responses
if (is.numeric(bal_drug_induced_training_data[[col_name]])){
bal_drug_induced_training_data[[col_name]] <- (bal_drug_induced_training_data[[col_name]] - min(bal_drug_induced_training_data[[col_name]])) /
(max(bal_drug_induced_training_data[[col_name]]) - min(bal_drug_induced_training_data[[col_name]]))
}
}
head(bal_drug_induced_training_data,1)
# Drop SMILES feature
bal_drug_induced_training_data <- bal_drug_induced_training_data[, colnames(bal_drug_induced_training_data) != "SMILES"]
library(tidyverse)
library(psych)
library(ggplot2)
library(gridExtra)
library(corrplot)
drug_induced_training_data <- read.csv("/Users/jasonavalos/Projects/school/ADS502/project/Applied-Data-Science/ADS502/drug_induced_autoimmunity_prediction/DIA_trainingset_RDKit_descriptors.csv")
threshold <- 0.5
drug_induced_training_data <- drug_induced_training_data[, colMeans(is.na(drug_induced_training_data)) <= threshold]
get_mode <- function(x) {
uniq_vals <- unique(x)
uniq_vals[which.max(tabulate(match(x, uniq_vals)))]
}
categorical_cols <- sapply(drug_induced_training_data, is.character)
drug_induced_training_data[categorical_cols] <- lapply(
drug_induced_training_data[categorical_cols],
function(x) {
x[is.na(x)] <- get_mode(x)
return(x)
})
write.csv(drug_induced_training_data, "DIA_trainingset_RDKit_descriptors.csv")
summary(drug_induced_training_data[, 1:6])
drug_data <- select(drug_induced_training_data, where(is.numeric))
drug_stats <- describe(drug_data)
head(drug_stats, 10)
data_quality_report <- data.frame(
Variable = names(drug_induced_training_data),
Type = sapply(drug_induced_training_data, class),
Missing = sapply(drug_induced_training_data, function(x) sum(is.na(x))),
Complete = sapply(drug_induced_training_data, function(x) sum(!is.na(x))),
Unique = sapply(drug_induced_training_data, function(x) length(unique(x)))
)
knitr::kable(head(data_quality_report, 40), caption = "Drug Induced Data Quality Report (Preview)")
hist <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_histogram(bins = 30)
boxplot <- ggplot(drug_induced_training_data, aes(x=BalabanJ)) + geom_boxplot()
grid.arrange(hist, boxplot, ncol = 2)
hist_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_histogram(bins = 30)
boxplot_2 <- ggplot(drug_induced_training_data, aes(x=Chi0n)) + geom_boxplot()
grid.arrange(hist_2, boxplot_2, ncol = 2)
hist_3 <- ggplot(drug_induced_training_data, aes(x=EState_VSA10)) + geom_histogram(bins = 30)
boxplot_3 <- ggplot(drug_induced_training_data, aes(x=EState_VSA10)) + geom_boxplot()
grid.arrange(hist_3, boxplot_3, ncol = 2)
hist_4 <- ggplot(drug_induced_training_data, aes(x=Kappa3)) + geom_histogram(bins = 30)
boxplot_4 <- ggplot(drug_induced_training_data, aes(x=Kappa3)) + geom_boxplot()
grid.arrange(hist_4, boxplot_4, ncol = 2)
hist_5 <- ggplot(drug_induced_training_data, aes(x=PEOE_VSA14)) + geom_histogram(bins = 30)
boxplot_5 <- ggplot(drug_induced_training_data, aes(x=PEOE_VSA14)) + geom_boxplot()
grid.arrange(hist_5, boxplot_5, ncol = 2)
numeric_cols_indexes <- sapply(drug_induced_training_data, is.numeric)
numeric_features <- drug_induced_training_data[numeric_cols_indexes]
data <- as.matrix(numeric_features)
heatmap(data,Colv = NA, Rowv = NA, scale = "row")
print("Pre-balance class cardinality")
table(drug_induced_training_data$Label)
# Random Undersampling
balanced_0 <- sample_n(filter(drug_induced_training_data, Label == 0), 118)
filtered_1 <- filter(drug_induced_training_data, Label == 1)
bal_drug_induced_training_data <- rbind(balanced_0, filtered_1)
print("Post-balance class cardinality")
table(bal_drug_induced_training_data$Label)
# Drop SMILES feature
bal_drug_induced_training_data <- bal_drug_induced_training_data[, colnames(bal_drug_induced_training_data) != "SMILES"]
for (col_name in colnames(bal_drug_induced_training_data)){
# For binary responses
if (length(unique(bal_drug_induced_training_data[[col_name]])) == 2){
bal_drug_induced_training_data[[col_name]] <- as.factor(bal_drug_induced_training_data[[col_name]])
}
# For standarization of numeric responses
if (is.numeric(bal_drug_induced_training_data[[col_name]])){
if( max(bal_drug_induced_training_data[[col_name]]) != min(bal_drug_induced_training_data[[col_name]])){
bal_drug_induced_training_data[[col_name]] <- (bal_drug_induced_training_data[[col_name]] - min(bal_drug_induced_training_data[[col_name]])) /
(max(bal_drug_induced_training_data[[col_name]]) - min(bal_drug_induced_training_data[[col_name]]))
}
else{
bal_drug_induced_training_data[[col_name]] <- 0
}
}
}
head(bal_drug_induced_training_data,1)
model_all <- lm(Label ~ ., data=numeric_features)  # with all the independent variables in the dataframe
summary(model_all)
coeff <- coefficients(model_all)
# To remove correlated
na_coeff_names <- names(coeff)[is.na(coeff)]
na_coeff_names
#head(bal_drug_induced_training_data,2)
model_all <- lm(Label ~ ., data=numeric_features)  # with all the independent variables in the dataframe to find correlated features
# summary(model_all)
coeff <- coefficients(model_all)
# To remove correlated where coefficient = NaN -> Correlation
na_coeff_names <- names(coeff)[is.na(coeff)]
na_coeff_names
# Drop SMILES feature
bal_drug_induced_training_data <- bal_drug_induced_training_data[, colnames(bal_drug_induced_training_data) != "SMILES"]
for (col_name in colnames(bal_drug_induced_training_data)){
# For binary responses
if (length(unique(bal_drug_induced_training_data[[col_name]])) == 2){
bal_drug_induced_training_data[[col_name]] <- as.factor(bal_drug_induced_training_data[[col_name]])
}
# For standarization of numeric responses
if (is.numeric(bal_drug_induced_training_data[[col_name]])){
if( max(bal_drug_induced_training_data[[col_name]]) != min(bal_drug_induced_training_data[[col_name]])){
bal_drug_induced_training_data[[col_name]] <- (bal_drug_induced_training_data[[col_name]] - min(bal_drug_induced_training_data[[col_name]])) /
(max(bal_drug_induced_training_data[[col_name]]) - min(bal_drug_induced_training_data[[col_name]]))
}
else{
bal_drug_induced_training_data[[col_name]] <- 0
}
}
}
# Final Dataset
# bal_drug_induced_training_data
table(bal_drug_induced_training_data$Label)
